[33mcommit 63cd5acfb2f4a9346b3cd70782cb57e644ea87c8[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mdev[m[33m, [m[1;31morigin/dev[m[33m)[m
Author: N0amG <noamguez0@gmail.com>
Date:   Fri May 17 16:55:09 2024 +0200

    class MouseManager

[1mdiff --git a/README.md b/README.md[m
[1mindex 5d98deb..473ab23 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -2,26 +2,25 @@[m [mTechTurret Tactic - TTT[m
 [m
 ---------------[m
 [m
[31m-Version 0.7[m
[32m+[m[32mVersion 0.7.1[m
 [m
 [m
[31m-    - nouveautÃ© :[m
[32m+[m[32m    - NouveautÃ© :[m
[32m+[m
[32m+[m[32m        - Meilleur gestion de la souris[m
[32m+[m
[32m+[m[32m        - Preview de l'action sÃ©lÃ©ctionner en transparence sur la souris[m
 [m
[31m-        - SystÃ¨me de vague fonctionnel.[m
[31m-        - Combat de boss a la 10eme vague[m
[31m-        - Victoire de la partie a la dÃ©faite du boss[m
 [m
 ----------------[m
 [m
[31m-    - amÃ©lioration :[m
[32m+[m[32m    - AmÃ©lioration :[m
         - buff :[m
[31m-            TITAN : life : 2500 -> 5000[m
         - nerf :[m
[31m-            Omni Turret : damage : 10 -> 5[m
         [m
 ----------------[m
 [m
[31m-    - fix de bug :[m
[32m+[m[32m    - Fix de bug :[m
         Speed of TITAN projectiles[m
 [m
 ----------------[m
[1mdiff --git a/assets/images/turrets/shield.png b/assets/images/turrets/shield.png[m
[1mnew file mode 100644[m
[1mindex 0000000..c1b7e71[m
Binary files /dev/null and b/assets/images/turrets/shield.png differ
[1mdiff --git a/script/__pycache__/enemy.cpython-311.pyc b/script/__pycache__/enemy.cpython-311.pyc[m
[1mindex cb8cbd4..59cc5cb 100644[m
Binary files a/script/__pycache__/enemy.cpython-311.pyc and b/script/__pycache__/enemy.cpython-311.pyc differ
[1mdiff --git a/script/__pycache__/others.cpython-311.pyc b/script/__pycache__/others.cpython-311.pyc[m
[1mindex 1d1418e..739d2f1 100644[m
Binary files a/script/__pycache__/others.cpython-311.pyc and b/script/__pycache__/others.cpython-311.pyc differ
[1mdiff --git a/script/__pycache__/turret.cpython-311.pyc b/script/__pycache__/turret.cpython-311.pyc[m
[1mindex 4fb8a78..83d593c 100644[m
Binary files a/script/__pycache__/turret.cpython-311.pyc and b/script/__pycache__/turret.cpython-311.pyc differ
[1mdiff --git a/script/enemy.py b/script/enemy.py[m
[1mindex 1e013ca..819a6b1 100644[m
[1m--- a/script/enemy.py[m
[1m+++ b/script/enemy.py[m
[36m@@ -39,7 +39,6 @@[m [mclass Bot_Wave_Spawner:[m
     def update(self):[m
         [m
         if not self.jeu.wave_ended:[m
[31m-            print(self.jeu.wave == self.boss_wave and self.spawned >= 1 )            [m
             if self.spawned >= self.bot_quantity or self.available_points <= self.bot_price_dict["basic"] or (self.jeu.wave == self.boss_wave and self.spawned >= 1):[m
                 cond = True[m
                 for bot in self.jeu.game_entities_list:[m
[36m@@ -72,7 +71,7 @@[m [mclass Bot_Wave_Spawner:[m
             return False[m
     [m
     def next_spawn(self):[m
[31m-        print(self.sub_wave_cut, self.spawned, self.sub_wave, " | S.R : ", self.spawn_rate)[m
[32m+[m[32m        #print(self.sub_wave_cut, self.spawned, self.sub_wave, " | S.R : ", self.spawn_rate)[m
         if self.spawned < self.bot_quantity:[m
             nb_bot = 0[m
             for bot in self.jeu.game_entities_list:[m
[36m@@ -183,12 +182,12 @@[m [mclass Bot_Wave_Spawner:[m
             self.last_spawn = time.time()[m
             if bot_type != "titan": self.available_points -= self.bot_price_dict[bot_type][m
             #print(self.list_of_bots_to_spawn)[m
[31m-            print(f"subwave : {self.sub_wave} | {self.spawned} / {self.bot_quantity} bots spawned")[m
[32m+[m[32m            #print(f"subwave : {self.sub_wave} | {self.spawned} / {self.bot_quantity} bots spawned")[m
             return True[m
         [m
         else:[m
             #print(self.list_of_bots_to_spawn)[m
[31m-            print(f"subwave : {self.sub_wave} | {self.spawned} / {self.bot_quantity} bots spawned")[m
[32m+[m[32m            #print(f"subwave : {self.sub_wave} | {self.spawned} / {self.bot_quantity} bots spawned")[m
             return False[m
         [m
     def manual_spawn(self, y, x, bot_type):[m
[36m@@ -806,7 +805,7 @@[m [mclass StealthBlack_Bot(Bot):[m
 [m
 class TITAN_Boss(Bot):[m
     def __init__(self, jeu, x, y, id):[m
[31m-        super().__init__(jeu, x, y, id, vie = 100, point = 2500,degats=0, vitesse= 0.25, portee = 0, cadence = 5, path ="enemy/titan/titan_moving_frames/frame_", nb_images=4, coef = (160*5, 96*5), name="TITAN_Boss", fps= 45)[m
[32m+[m[32m        super().__init__(jeu, x, y, id, vie = 5000, point = 2500,degats=0, vitesse= 0.25, portee = 0, cadence = 5, path ="enemy/titan/titan_moving_frames/frame_", nb_images=4, coef = (160*5, 96*5), name="TITAN_Boss", fps= 45)[m
 [m
         self.state_list = ["moving", "standing" , "attack_1", "attack_2",[m
                            "shield", "death_beam", "damaged", "death"][m
[1mdiff --git a/script/game.py b/script/game.py[m
[1mindex bbdbe58..2840b27 100644[m
[1m--- a/script/game.py[m
[1m+++ b/script/game.py[m
[36m@@ -43,7 +43,8 @@[m [mclass Game:[m
         decalage_x = 160[m
         decalage_y = 295 + self.largeur_interface[m
         [m
[31m-        self.liste_tourelle = [("Turret", 100), ("Laser Turret", 200), ("Shield", 250), ("Plasma Turret",350), ("Omni Turret", 450), ("BlackHole Turret", 500),] #("AntiMatter Turret", 750)[m
[32m+[m[32m        self.liste_tourelle = [("Basic Turret", 100), ("Laser Turret", 200), ("Shield", 250), ("Plasma Turret",350), ("Omni Turret", 450), ("BlackHole Turret", 500),] #("AntiMatter Turret", 750)[m
[32m+[m[32m        self.liste_tourelle_image = [pg.transform.scale(pg.image.load(f"assets/images/turrets/{tourelle[0].lower().replace(' ', '_')}.png"), (75, 100)).convert_alpha() for tourelle in self.liste_tourelle][m
         [m
         self.paused = False[m
         [m
[36m@@ -69,9 +70,9 @@[m [mclass Game:[m
         self.is_game_over = False[m
         self.is_player_win = False[m
         [m
[31m-        # Tracking de la souris[m
[31m-        self.previous_mouse_selection = None[m
[31m-        self.mouse_selection = None[m
[32m+[m[41m        [m
[32m+[m[32m        # gestion de la souris[m
[32m+[m[32m        self.mouse_manager = others.MouseManager(jeu=self)[m
         [m
         [m
         # Mise en place du shop[m
[36m@@ -94,13 +95,13 @@[m [mclass Game:[m
         [m
         self.wave_ended = False[m
         self.bot_wave_spawner = enemy.Bot_Wave_Spawner(jeu=self)[m
[31m-        [m
[32m+[m[41m                [m
         #test et placement des Ã©lÃ©ments    [m
[31m-        [[self.game_entities_list.append(turret.Turret_selection(self ,self.matrice_tourelle[j][i][1], self.matrice_tourelle[j][i][0], "Omni Turret")) for i in range(0,8)] for j in range(0,5)][m
[32m+[m[32m        #[[self.game_entities_list.append(turret.Turret_selection(self ,self.matrice_tourelle[j][i][1], self.matrice_tourelle[j][i][0], "Omni Turret")) for i in range(0,8)] for j in range(0,5)][m
         #[[self.game_entities_list.append(turret.Turret_selection(self ,self.matrice_tourelle[j][i][1], self.matrice_tourelle[j][i][0], "Plasma Turret")) for i in range(0,2)] for j in range(0,5)][m
         #self.game_entities_list.append(turret.Turret_selection(self ,self.matrice_tourelle[2][1][1], self.matrice_tourelle[2][1][0], "BlackHole Turret"))[m
         [m
[31m-        #self.bot_wave_spawner.manual_spawn(self.matrice_bot[1][1][1], self.matrice_bot[1][1][0], "titan")[m
[32m+[m[32m        #self.bot_wave_spawner.manual_spawn(self.matrice_bot[1][1][1], self.matrice_bot[1][1][0], "emp")[m
         [m
         self.debug_bot_timer = None[m
         #self.debug_bot_timer = time.time()[m
[36m@@ -121,20 +122,21 @@[m [mclass Game:[m
                     [m
                 elif event.type == pg.MOUSEBUTTONDOWN:[m
                     [m
[31m-                    self.mouse_detection()[m
[31m-                    #print(f"{self.previous_mouse_selection=}, {self.mouse_selection=}")[m
[32m+[m[32m                    self.mouse_manager.update()[m
[32m+[m[41m                    [m
[32m+[m[32m                    #print(f"{self.mouse_manager.previous_mouse_selection=}, {self.mouse_manager.mouse_selection=}")[m
                     if event.button == 1:[m
                         [m
[31m-                        if self.previous_mouse_selection is not None:[m
[32m+[m[32m                        if self.mouse_manager.previous_mouse_selection is not None:[m
                             [m
[31m-                            if self.mouse_selection[0] == "matrix":[m
[32m+[m[32m                            if self.mouse_manager.mouse_selection[0] == "matrix":[m
                                 [m
[31m-                                if self.previous_mouse_selection[0] == "shop":[m
[31m-                                    turret_index = self.previous_mouse_selection[1][m
[32m+[m[32m                                if self.mouse_manager.previous_mouse_selection[0] == "shop":[m
[32m+[m[32m                                    turret_index = self.mouse_manager.previous_mouse_selection[1][m
                                     if self.liste_tourelle[turret_index][0] != "":[m
                                         if self.kamas >= self.liste_tourelle[turret_index][1]:[m
[31m-                                            x = self.matrice_tourelle[self.mouse_selection[2]][self.mouse_selection[1]][1][m
[31m-                                            y = self.matrice_tourelle[self.mouse_selection[2]][self.mouse_selection[1]][0][m
[32m+[m[32m                                            x = self.matrice_tourelle[self.mouse_manager.mouse_selection[2]][self.mouse_manager.mouse_selection[1]][1][m
[32m+[m[32m                                            y = self.matrice_tourelle[self.mouse_manager.mouse_selection[2]][self.mouse_manager.mouse_selection[1]][0][m
                                             cond = True[m
                                             for entity in self.game_entities_list:[m
                                                 # Si l'endroit n'est pas djÃ  occupÃ© par une tourelle[m
[36m@@ -142,15 +144,15 @@[m [mclass Game:[m
                                                     cond = False[m
                                                     break[m
                                             if cond:[m
[31m-                                                self.kamas -= self.liste_tourelle[self.previous_mouse_selection[1]][1][m
[32m+[m[32m                                                self.kamas -= self.liste_tourelle[self.mouse_manager.previous_mouse_selection[1]][1][m
                                                 tourelle = turret.Turret_selection(jeu = self, x=x , y=y, name = self.liste_tourelle[turret_index][0])[m
                                                 self.game_entities_list.append(tourelle)[m
                                                 [m
                                 [m
[31m-                                elif self.previous_mouse_selection[0] == "red_cross":[m
[32m+[m[32m                                elif self.mouse_manager.previous_mouse_selection[0] == "red_cross":[m
                                     # RÃ©cupÃ©rer les coordonnÃ©es de la tourelle Ã  supprimer[m
[31m-                                    x = self.matrice_tourelle[self.mouse_selection[2]][self.mouse_selection[1]][1][m
[31m-                                    y = self.matrice_tourelle[self.mouse_selection[2]][self.mouse_selection[1]][0][m
[32m+[m[32m                                    x = self.matrice_tourelle[self.mouse_manager.mouse_selection[2]][self.mouse_manager.mouse_selection[1]][1][m
[32m+[m[32m                                    y = self.matrice_tourelle[self.mouse_manager.mouse_selection[2]][self.mouse_manager.mouse_selection[1]][0][m
                                     # Parcourir la liste des entitÃ©s du jeu[m
                                     for entity in self.game_entities_list:[m
                                         # Si l'entitÃ© est une tourelle et qu'elle est Ã  la position de la tourelle Ã  supprimer[m
[36m@@ -161,7 +163,7 @@[m [mclass Game:[m
                                             self.game_entities_list.remove(entity)[m
                                             break[m
                         [m
[31m-                            elif self.wave_ended and self.mouse_selection[0] == "next_wave_button":[m
[32m+[m[32m                            elif self.wave_ended and self.mouse_manager.mouse_selection[0] == "next_wave_button":[m
                                 self.wave_ended = False[m
                                 self.wave += 1[m
                                 [m
[36m@@ -337,43 +339,15 @@[m [mclass Game:[m
         self.next_wave_button_rect.bottomright = (self.taille_fenetre[0] - 50, self.taille_fenetre[1] - 10)[m
         self.fenetre.blit(self.next_wave_button_image, self.next_wave_button_rect)[m
 [m
[31m-    def mouse_detection(self):[m
[31m-        # RÃ©cupÃ©ration des coordonnÃ©es de la souris[m
[31m-        mouse_x, mouse_y = pg.mouse.get_pos()[m
[31m-[m
[31m-        # RÃ©cupÃ©ration de la position de la souris dans la matrice[m
[31m-        mouse_matrix_x = (mouse_x - (295+self.largeur_interface -81//2)) // 81[m
[31m-        mouse_matrix_y = (mouse_y - (160 -101//2)) // 101[m
[31m-        [m
[31m-        # VÃ©rification que la souris est bien dans la matrice[m
[31m-        if mouse_matrix_y >= 0 and mouse_matrix_y < 5 and mouse_matrix_x >= 0 and mouse_matrix_x < 10:[m
[31m-            #print(mouse_matrix_y, mouse_matrix_x)[m
[31m-            self.previous_mouse_selection = self.mouse_selection[m
[31m-            self.mouse_selection = ("matrix", mouse_matrix_x, mouse_matrix_y)[m
[31m-            return mouse_matrix_x, mouse_matrix_y[m
[31m-        [m
[31m-        elif 50 < mouse_x < self.largeur_interface - 50 and mouse_y > self.taille_fenetre[1] - 87:[m
[31m-            self.previous_mouse_selection = self.mouse_selection[m
[31m-            self.mouse_selection = ("red_cross", None)[m
[31m-[m
[31m-        elif self.wave_ended and self.next_wave_button_rect.collidepoint(mouse_x, mouse_y):[m
[31m-            self.previous_mouse_selection = self.mouse_selection[m
[31m-            self.mouse_selection = ("next_wave_button", None)[m
[31m-[m
[31m-        else:[m
[31m-            for i in range(len(self.liste_rect_shop)):[m
[31m-                if self.liste_rect_shop[i].collidepoint(mouse_x, mouse_y):[m
[31m-                    #print("shop", i)[m
[31m-                    self.previous_mouse_selection = self.mouse_selection[m
[31m-                    self.mouse_selection = ("shop", i)[m
[31m-                    return i  # Retourne le mot "shop" et l'index de la tourelle[m
[31m-            [m
[31m-            return None[m
[32m+[m[41m    [m
 [m
     def render(self):[m
         # Dessiner sur la fenÃªtre[m
         self.fenetre.blit(self.fond_ecran, (self.largeur_interface, 0))  # Dessine l'image du fond d'Ã©cran aux coordonnÃ©es (0, 0)[m
[31m-[m
[32m+[m[41m        [m
[32m+[m[32m        self.render_shop_interface()[m
[32m+[m[32m        self.red_cross_draw()[m
[32m+[m[41m                [m
         self.render_wave()[m
         [m
         # Affichage du "Game Over"[m
[36m@@ -401,6 +375,9 @@[m [mclass Game:[m
             if self.wave_ended and cond and not self.is_player_win:[m
                 self.next_wave_button_render()[m
             [m
[32m+[m[32m            self.mouse_manager.previous_selection_on_mouse()[m
[32m+[m[41m                [m
[32m+[m[41m            [m
         if self.paused:[m
             self.render_pause()[m
         # Mettre Ã  jour l'affichage[m
[1mdiff --git a/script/others.py b/script/others.py[m
[1mindex 891edf6..ece918e 100644[m
[1m--- a/script/others.py[m
[1m+++ b/script/others.py[m
[36m@@ -84,9 +84,6 @@[m [mclass Animation(pg.sprite.Sprite):[m
         [m
         fenetre.blit(self.image, self.rect)[m
 [m
[31m-        if self.name == "impulse":[m
[31m-            self.jeu.render_shop_interface()[m
[31m-            self.jeu.red_cross_draw()[m
 [m
 [m
 class TITAN_Animation(pg.sprite.Sprite):[m
[36m@@ -245,6 +242,100 @@[m [mclass TITAN_Animation(pg.sprite.Sprite):[m
         #pg.draw.rect(fenetre, (255,0,0), (self.rect.x, self.rect.y, self.rect.width, self.rect.height), 1)[m
         fenetre.blit(self.image, self.rect)[m
 [m
[32m+[m
[32m+[m[32mclass MouseManager:[m
[32m+[m[32m    def __init__(self, jeu):[m
[32m+[m[32m        self.jeu = jeu[m
[32m+[m[32m        self.mouse_position = pg.mouse.get_pos()[m
[32m+[m[32m        self.mouse_button_state = None[m
[32m+[m[32m        self.last_mouse_event = None[m
[32m+[m[41m        [m
[32m+[m[32m        self.mouse_selection = None[m
[32m+[m[32m        self.previous_mouse_selection = None #('matrix', 0, 0)[m
[32m+[m
[32m+[m[32m    def update(self):[m
[32m+[m[32m        self.mouse_position = pg.mouse.get_pos()[m
[32m+[m[32m        self.mouse_button_state = pg.mouse.get_pressed()[m
[32m+[m[32m        self.last_mouse_event = pg.mouse.get_rel()[m
[32m+[m[41m        [m
[32m+[m[32m        if self.mouse_button_state[0]:[m
[32m+[m[32m            self.handle_mouse_event()[m
[32m+[m[41m        [m
[32m+[m[32m        if self.mouse_button_state[2]:[m
[32m+[m[32m            self.previous_mouse_selection = None #('matrix', 0, 0)[m
[32m+[m[32m            self.mouse_selection = None[m
[32m+[m
[32m+[m[32m        #print(self.previous_mouse_selection, self.mouse_selection)[m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[32m    def handle_mouse_event(self):[m
[32m+[m[41m        [m
[32m+[m[32m        if self.mouse_button_state[0]:[m
[32m+[m[32m            # RÃ©cupÃ©ration de la position de la souris dans la matrice[m
[32m+[m[32m            mouse_matrix_x = (self.mouse_position[0] - (295+self.jeu.largeur_interface -81//2)) // 81[m
[32m+[m[32m            mouse_matrix_y = (self.mouse_position[1] - (160 -101//2)) // 101[m
[32m+[m[41m            [m
[32m+[m[32m            # VÃ©rification que la souris est bien dans la matrice[m
[32m+[m[32m            if mouse_matrix_y >= 0 and mouse_matrix_y < 5 and mouse_matrix_x >= 0 and mouse_matrix_x < 10:[m
[32m+[m[32m                #print(mouse_matrix_y, mouse_matrix_x)[m
[32m+[m[32m                if self.mouse_selection != None and self.mouse_selection[0] != "matrix":[m
[32m+[m[32m                    self.previous_mouse_selection = self.mouse_selection[m
[32m+[m[32m                self.mouse_selection = ("matrix", mouse_matrix_x, mouse_matrix_y)[m
[32m+[m[32m                return mouse_matrix_x, mouse_matrix_y[m
[32m+[m[41m            [m
[32m+[m[32m            elif 50 < self.mouse_position[0] < self.jeu.largeur_interface - 50 and self.mouse_position[1] > self.jeu.taille_fenetre[1] - 87:[m
[32m+[m[32m                self.previous_mouse_selection = self.mouse_selection[m
[32m+[m[32m                self.mouse_selection = ("red_cross", None)[m
[32m+[m
[32m+[m[32m            elif self.jeu.wave_ended and self.jeu.next_wave_button_rect.collidepoint(self.mouse_position[0], self.mouse_position[1]):[m
[32m+[m[32m                self.previous_mouse_selection = self.mouse_selection[m
[32m+[m[32m                self.mouse_selection = ("next_wave_button", None)[m
[32m+[m
[32m+[m[32m            else:[m
[32m+[m[32m                for i in range(len(self.jeu.liste_rect_shop)):[m
[32m+[m[32m                    if self.jeu.liste_rect_shop[i].collidepoint(self.mouse_position[0], self.mouse_position[1]):[m
[32m+[m[32m                        #print("shop", i)[m
[32m+[m[32m                        self.previous_mouse_selection = self.mouse_selection[m
[32m+[m[32m                        self.mouse_selection = ("shop", i)[m
[32m+[m[32m                        return i  # Retourne le mot "shop" et l'index de la tourelle[m
[32m+[m[41m                [m
[32m+[m[32m                return None[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m    def previous_selection_on_mouse(self):[m
[32m+[m[32m        self.mouse_position = pg.mouse.get_pos()[m
[32m+[m[41m        [m
[32m+[m[32m        image_list = self.jeu.liste_tourelle_image[m
[32m+[m[41m            [m
[32m+[m[32m        if self.mouse_selection != None:[m
[32m+[m[32m            if self.mouse_selection[0] == "shop":[m
[32m+[m[32m                image = image_list[self.mouse_selection[1]][m
[32m+[m[32m                image.set_alpha(160)[m
[32m+[m[32m                self.jeu.fenetre.blit(image, (self.mouse_position[0]- image.get_width()//2, self.mouse_position[1]- image.get_height()//2))[m
[32m+[m[32m                return True[m
[32m+[m[32m            if self.mouse_selection[0] == "red_cross":[m
[32m+[m[32m                image = pg.transform.scale(pg.image.load("assets/images/others/red_cross.png").convert_alpha(), (50, 50))[m
[32m+[m[32m                image.set_alpha(160)[m
[32m+[m[32m                self.jeu.fenetre.blit(image, (self.mouse_position[0]- image.get_width()//2, self.mouse_position[1]- image.get_height()//2))[m
[32m+[m[32m                return True[m
[32m+[m[41m        [m
[32m+[m[32m        if self.previous_mouse_selection != None:[m
[32m+[m[32m            if self.previous_mouse_selection[0] == "shop":[m
[32m+[m[32m                image = image_list[self.previous_mouse_selection[1]][m
[32m+[m[32m                image.set_alpha(160)[m
[32m+[m[32m                self.jeu.fenetre.blit(image, (self.mouse_position[0]- image.get_width()//2, self.mouse_position[1]- image.get_height()//2))[m[41m        [m
[32m+[m[32m                return True[m
[32m+[m[32m            if self.previous_mouse_selection[0] == "red_cross":[m
[32m+[m[32m                image = pg.transform.scale(pg.image.load("assets/images/others/red_cross.png").convert_alpha(), (50, 50))[m
[32m+[m[32m                image.set_alpha(160)[m
[32m+[m[32m                self.jeu.fenetre.blit(image, (self.mouse_position[0]- image.get_width()//2, self.mouse_position[1]- image.get_height()//2))[m
[32m+[m[32m                return True[m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[32m        return False[m
[32m+[m
 if __name__ == "__main__":[m
     import game[m
     jeu = game.Game()[m
[1mdiff --git a/script/turret.py b/script/turret.py[m
[1mindex 607027f..f45fc7a 100644[m
[1m--- a/script/turret.py[m
[1m+++ b/script/turret.py[m
[36m@@ -9,7 +9,7 @@[m [mfrom pygame import BLEND_RGB_ADD[m
 [m
 class Turret_selection:[m
     def __new__(cls, jeu, x, y, name):[m
[31m-        if name == "Turret":[m
[32m+[m[32m        if name == "Basic Turret":[m
             return Basic_Turret(jeu, x, y)[m
         [m
         elif name == "Laser Turret":[m
[36m@@ -34,7 +34,6 @@[m [mclass Turret_selection:[m
         else:[m
             return None[m
 [m
[31m-[m
 class Turret:[m
     def __init__(self, jeu, x, y, vie, degats, portee, cadence, prix, name):[m
         # Ajoutez ici les attributs spÃ©cifiques Ã  la classe Turret[m
